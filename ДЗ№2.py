1.Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя,
а указать явно, в программе.

example_list = ["String", 10, 25.78, False, "True",[]]

for item in example_list:
        print(type(item))



2. Для списка реализовать обмен значений соседних элементов, т.е.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить
на своем месте.
Для заполнения списка элементов необходимо использовать
функцию input().

items = input("Укажите значения списка через запятую >>>").split(",")

max_idx = len(items) - 1

for idx in range(0, max_idx, 2):
    next_idx = idx + 1
    items[idx], items[next_idx] = items[next_idx], items[idx]

print(items)


3. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна,
лето, осень).
Напишите решения через list и через dict.

month = int(input("Укажите номер месяца >>>"))

year_dict = {
    "Зима": (12, 1, 2),
    "Весна": (3, 4, 5),
    "Лето": (6, 7, 8),
    "Осень": (9, 10, 11),
}

for season, months in year_dict.items():
    if month in months:
        print(f"Время года = {season}")





4.Пользователь вводит строку из нескольких слов, разделённых
пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если в слово длинное,
выводить только первые 10 букв в слове.

words = input("Введите строку из нескольких слов >>> ").split()

for idx, value in enumerate(words, start=1):
    print(f"{idx}. {value[:10]}")



5. Реализовать структуру «Рейтинг», представляющую собой
не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться
после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде,
например, my_list = [7, 5, 3, 3, 2].

rating = [9, 8, 8, 7, 6, 6, 6, 5, 3, 2, 1]

while True:
    try:
        prit(f"Рейтинг = {rating}")
        user_rate = int(input("Введите новый рейтинг >>> "))
        rating.append(user_rate)
        rating.sort(reverse=True)
        print(rating)
    except ValueError:
        print("Неверное число")
    except KeyboardInterrupt:
        exit()




6. Реализовать структуру данных «Товары». Она должна представлять
собой список кортежей. Каждый кортеж хранит информацию об
отдельном товаре. В кортеже должно быть два элемента —
номер товара и словарь с параметрами (характеристиками товара:
название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е.
запрашивать все данные у пользователя.
Пример готовой структуры:
[
    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь,
в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик,
например список названий товаров.
Пример:
{
    “название”: [“компьютер”, “принтер”, “сканер”],
    “цена”: [20000, 6000, 2000],
    “количество”: [5, 2, 7],
    “ед”: [“шт.”]
}


product_struccture = {
    "Название": str,
    "Цена": int,
    "Количество": int,
    "Еденица измерения": str,
}

product_list = []
product_counter = 1

while True:
    decision = input(f"Товаров = {len(product_lit)}, добавить? [y/n] ").lower()

    if decision == 'n':
        break
    else:
        product_info = {}

        for property_name, property_type in producct_structure.items():
            user_input = input(f"Заполните поле '{property_name}' >>> ")
            product_info[property_name] = property_type(user_input)

        product_list.append((product_counter, product_info))
        product_counter += 1

    product_analytics = {}

    for analytics_key in product_struccture.keys():
        item_list = []

        for product in product_list:
            item_list.append(product[1][analytics_key])

        product_analytics[analytics_key] = item_list

    print(product_analytics)
